import Foundation

struct ResonantCollinearity {

    static func solve() {
        let grid = Grid(string: input)
        let index = grid.index(exclusions: ["."])

        let antinodes = index.values.flatMap { coords in
            coords.combinations(2).flatMap { pair in
                let diff = pair[0] - pair[1]
                return [pair[0] + diff, pair[1] - diff]
            }.filter { antinode in
                grid.size.contains(antinode)
            }
        }

        let s1 = Set(antinodes).count

        func extend(_ coord: Coord, _ diff: Coord) -> [Coord] {
            guard grid.size.contains(coord) else { return [] }
            return [coord] + extend(coord + diff, diff)
        }

        let resonantAntinodes = index.values.flatMap { coords in
            coords.combinations(2).flatMap { pair in
                let diff = pair[0] - pair[1]
                return extend(pair[0], diff) + extend(pair[1], -diff)
            }
        }

        let s2 = Set(resonantAntinodes).count

        printSolutions(s1, s2)
    }

}

extension ResonantCollinearity {

    static let input = """
.......................O......T.....d......M......
..............................F...................
..........V..................R....................
............B..t..........T..........d............
.....................B.........T................M.
..V.................................2.......M.....
.......V........................F.O..........2....
...................................T..............
..................................................
......r..........B......................c.........
.....o3.B.............................2...........
..................1...m..o....d..c.....M..........
......Qr....o............F....0............1......
....Q.......................0....................2
......t..........0................................
.............R.................................mL.
....r..............3.....................c..1.....
.........Q.........................1..............
................x...R.............................
...x........8.R...................................
..................8...............................
........x.u.................Z.....................
...........................X...............d......
....................30.....................f......
......q...............v...................c.......
..........t8.........D.3..........................
.......t.......4.............8....................
...b..................C...........D...............
.........................v..ND4..........K........
.......F.........u...........C..............fZ....
........X..9...........N.........Z..........k.....
.............X.6...q..........................k...
..............................C.Z...........m....k
...................4.v..............N.............
....................u.......D..............m......
............................vl.....UK.............
............................l..6.......f..........
..................q.4............N................
..........b....x..............fu..................
.9..................................U.......l.....
....w......b.........L......6.....z.5.............
..........X..........W6........5............z.....
...........q..........L............z........n...W.
............................5.........n...W..z....
........9........w................7....n..........
............w......................7...K.....n....
.........................U....K......W............
.........w.....L.................k....7...........
...................7.............l.............5..
..............9...................................
"""

}
